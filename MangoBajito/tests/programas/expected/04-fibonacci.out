| AcomÃ³date que te lo estan analizando d:-)
--> Print Symbol Table? (s/n): [1;36m[5m
               =======================================================
                             Symbol Table Representation              
               =======================================================
[0m
[1;35m[5m    Clave: 1: i[0m
    |---> SÃ­mbolo: i, CategorÃ­a: (7)VAR_FOR, DeclaraciÃ³n: (0)VARIABLE, Scope: 5, Type: mango, Informacion: 2 1 , Value: 2

[1;35m[5m    Clave: 2: temp[0m
    |---> SÃ­mbolo: temp, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 4, Type: mango, Value: 1

[1;35m[5m    Clave: 3: a[0m
    |---> SÃ­mbolo: a, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 4, Type: mango, Value: 1

[1;35m[5m    Clave: 4: mango[0m
    |---> SÃ­mbolo: mango, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 5: manguangua[0m
    |---> SÃ­mbolo: manguangua, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 6: tas_claro[0m
    |---> SÃ­mbolo: tas_claro, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 7: hablame[0m
    |---> SÃ­mbolo: hablame, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 8: un_coÃ±o[0m
    |---> SÃ­mbolo: un_coÃ±o, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 9: caramba_Ã±ero[0m
    |---> SÃ­mbolo: caramba_Ã±ero, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 10: se_prende[0m
    |---> SÃ­mbolo: se_prende, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 11: b[0m
    |---> SÃ­mbolo: b, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 4, Type: mango, Value: 1

[1;35m[5m    Clave: 12: manguita[0m
    |---> SÃ­mbolo: manguita, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 13: res[0m
    |---> SÃ­mbolo: res, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 2, Type: mango, Value: 1

[1;35m[5m    Clave: 14: higuerote[0m
    |---> SÃ­mbolo: higuerote, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 15: rescata[0m
    |---> SÃ­mbolo: rescata, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 16: negro[0m
    |---> SÃ­mbolo: negro, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 17: n[0m
    |---> SÃ­mbolo: n, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 2, Type: mango, Value: 0

--> Print AST? (s/n): [1;36m[5m
               =======================================================
                                   AST Representation                 
               =======================================================
[0m
Programa
|--> Main
     |--> InstrucciÃ³n | Kind: ;
          |--> InstrucciÃ³n | Kind: ;
          |    |--> InstrucciÃ³n | Kind: ;
          |    |    |--> AsignaciÃ³n | Kind: =
          |    |    |    |--> n | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |    |    |    |--> Literal | Category: NumÃ©rico | Type: mango | Kind: CAST(higuerote) | Value: 0
          |    |    |         |--> hablame | Category: input | Type: higuerote | Value: "0"
          |    |    |              |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Value: "Ingrese numero: "
          |    |    |--> res | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |    |--> CondiciÃ³n
          |         |--> si_es_asi
          |         |    |--> Guardia
          |         |    |    |--> menol | Category: OperaciÃ³n | Type: tas_claro | Kind: Booleana | Value: 1
          |         |    |         |--> n | Category: Identificador | Type: mango | Value: 0
          |         |    |         |--> Literal | Category: NumÃ©rico | Type: mango | Value: 2
          |         |    |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 0
          |         |         |--> res | Category: Identificador | Type: mango | Value: 0
          |         |         |--> n | Category: Identificador | Type: mango | Value: 0
          |         |--> nojoda
          |              |--> InstrucciÃ³n | Kind: ;
          |                   |--> InstrucciÃ³n | Kind: ;
          |                   |    |--> InstrucciÃ³n | Kind: ;
          |                   |    |    |--> InstrucciÃ³n | Kind: ;
          |                   |    |    |    |--> AsignaciÃ³n | Kind: =
          |                   |    |    |    |    |--> a | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |                   |    |    |    |    |--> Literal | Category: NumÃ©rico | Type: mango | Value: 0
          |                   |    |    |    |--> AsignaciÃ³n | Kind: =
          |                   |    |    |         |--> b | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |                   |    |    |         |--> Literal | Category: NumÃ©rico | Type: mango | Value: 1
          |                   |    |    |--> temp | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |                   |    |--> Bucle | Category: Determinado
          |                   |         |--> i | Category: Var_Ciclo | Type: mango | Value: 2
          |                   |         |    |--> entre | Category: Rango
          |                   |         |    |    |--> Literal | Category: NumÃ©rico | Type: mango | Value: 2
          |                   |         |    |--> hasta | Category: Rango
          |                   |         |         |--> + | Category: OperaciÃ³n | Type: mango | Kind: NumÃ©rica | Value: 1
          |                   |         |              |--> n | Category: Identificador | Type: mango | Value: 0
          |                   |         |              |--> Literal | Category: NumÃ©rico | Type: mango | Value: 1
          |                   |         |--> InstrucciÃ³n | Kind: ;
          |                   |              |--> InstrucciÃ³n | Kind: ;
          |                   |              |    |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 1
          |                   |              |    |    |--> temp | Category: Identificador | Type: mango | Value: 0
          |                   |              |    |    |--> + | Category: OperaciÃ³n | Type: mango | Kind: NumÃ©rica | Value: 1
          |                   |              |    |         |--> a | Category: Identificador | Type: mango | Value: 0
          |                   |              |    |         |--> b | Category: Identificador | Type: mango | Value: 1
          |                   |              |    |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 1
          |                   |              |         |--> a | Category: Identificador | Type: mango | Value: 0
          |                   |              |         |--> b | Category: Identificador | Type: mango | Value: 1
          |                   |              |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 1
          |                   |                   |--> b | Category: Identificador | Type: mango | Value: 1
          |                   |                   |--> temp | Category: Identificador | Type: mango | Value: 1
          |                   |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 1
          |                        |--> res | Category: Identificador | Type: mango | Value: 0
          |                        |--> b | Category: Identificador | Type: mango | Value: 1
          |--> rescata | Category: Output | Type: higuerote | Value: "Fibonacci(0) = 1"
               |--> + | Category: OperaciÃ³n | Type: higuerote | Kind: ConcatenaciÃ³n | Value: "Fibonacci(0) = 1"
                    |--> + | Category: OperaciÃ³n | Type: higuerote | Kind: ConcatenaciÃ³n | Value: "Fibonacci(0) = "
                    |    |--> + | Category: OperaciÃ³n | Type: higuerote | Kind: ConcatenaciÃ³n | Value: "Fibonacci(0"
                    |    |    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Value: "Fibonacci("
                    |    |    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Kind: CAST(mango) | Value: "0"
                    |    |         |--> n | Category: Identificador | Type: mango | Value: 0
                    |    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Value: ") = "
                    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Kind: CAST(mango) | Value: "1"
                         |--> res | Category: Identificador | Type: mango | Value: 1
--> Print TAC? (s/n): [1;36m[5m
               =======================================================
                                   TAC Representation                 
               =======================================================
[0m
[1;36m[5m
.data:[0m
str0 := "Ingrese numero: "
str1 := "Fibonacci("
str2 := ") = "
[1;36m[5m
.declaration:[0m
[1;33m[5mScope 2:[0m
n: alloc 4
res: alloc 4

[1;33m[5mScope 4:[0m
a: alloc 4
b: alloc 4
temp: alloc 4
[1;36m[5m
.code:[0m
param &str0
t0 := call read, 1
n := (int)t0
ifnot n < 2 goto L4
res := n
goto L3
L4: 
a := 0
b := 1
i := 2
t1 := n + 1
L0: 
if i < t1 goto L1
goto L2
L1: 
t2 := a + b
temp := t2
a := b
b := temp
i := i + 1
goto L0
L2: 
res := b
L3: 
param &str1
param (string)n
t3 := call concat, 2
param t3
param &str2
t4 := call concat, 2
param t4
param (string)res
call print, 2
--> Print Control Flow Graphs? (s/n): [1;36m[5m
               =======================================================
                                  Control Flow Graphs                 
               =======================================================
[0m
----------------------------------------------------------
[1;33m[5mName: ENTRY:[0m
Childs: B1 
In: a b i int res str0 str1 str2 string t0 t1 t3 t4 
Out: a b i int res str0 str1 str2 string t0 t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B1:[0m
Lider Label: 
Code:
     | param &str0
     | t0 := call read, 1
Childs: B2 
Fathers: ENTRY 
Use: str0 
In: a b i int res str0 str1 str2 string t0 t1 t3 t4 
Out: a b i int res str1 str2 string t0 t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B2:[0m
Lider Label: 
Code:
     | n := (int)t0
     | ifnot n < 2 goto L4
Childs: B4 B3 
Fathers: B1 
Def: n 
Use: int t0 
In: a b i int res str1 str2 string t0 t1 t3 t4 
Out: a b i n res str1 str2 string t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B3:[0m
Lider Label: 
Code:
     | res := n
     | goto L3
Childs: B9 
Fathers: B2 
Use: n 
In: n res str1 str2 string t3 t4 
Out: n res str1 str2 string t3 t4 
----------------------------------------------------------
[1;33m[5mName: B4:[0m
Lider Label: L4
Code:
     | L4: 
     | a := 0
     | b := 1
     | i := 2
     | t1 := n + 1
Childs: B5 
Fathers: B2 
Use: n 
In: a b i n res str1 str2 string t1 t3 t4 
Out: a b i n res str1 str2 string t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B5:[0m
Lider Label: L0
Code:
     | L0: 
     | if i < t1 goto L1
Childs: B7 B6 
Fathers: B4 B7 
Use: i t1 
In: a b i n res str1 str2 string t1 t3 t4 
Out: a b i n res str1 str2 string t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B6:[0m
Lider Label: 
Code:
     | goto L2
Childs: B8 
Fathers: B5 
In: b n res str1 str2 string t3 t4 
Out: b n res str1 str2 string t3 t4 
----------------------------------------------------------
[1;33m[5mName: B7:[0m
Lider Label: L1
Code:
     | L1: 
     | t2 := a + b
     | temp := t2
     | a := b
     | b := temp
     | i := i + 1
     | goto L0
Childs: B5 
Fathers: B5 
Def: t2 temp 
Use: a b 
In: a b i n res str1 str2 string t1 t3 t4 
Out: a b i n res str1 str2 string t1 t3 t4 
----------------------------------------------------------
[1;33m[5mName: B8:[0m
Lider Label: L2
Code:
     | L2: 
     | res := b
Childs: B9 
Fathers: B6 
Use: b 
In: b n res str1 str2 string t3 t4 
Out: n res str1 str2 string t3 t4 
----------------------------------------------------------
[1;33m[5mName: B9:[0m
Lider Label: L3
Code:
     | L3: 
     | param &str1
     | param (string)n
     | t3 := call concat, 2
Childs: B10 
Fathers: B3 B8 
Use: n str1 string 
In: n res str1 str2 string t3 t4 
Out: res str2 string t3 t4 
----------------------------------------------------------
[1;33m[5mName: B10:[0m
Lider Label: 
Code:
     | param t3
     | param &str2
     | t4 := call concat, 2
Childs: B11 
Fathers: B9 
Use: str2 t3 
In: res str2 string t3 t4 
Out: res string t4 
----------------------------------------------------------
[1;33m[5mName: B11:[0m
Lider Label: 
Code:
     | param t4
     | param (string)res
     | call print, 2
Childs: EXIT 
Fathers: B10 
Use: res string t4 
In: res string t4 
----------------------------------------------------------
[1;33m[5mName: EXIT:[0m
Fathers: B11 
----------------------------------------------------------

                                   * | Matriz de Adyacencia | *                                    
   -   |ENTRY |  B1  |  B2  |  B3  |  B4  |  B5  |  B6  |  B7  |  B8  |  B9  | B10  | B11  | EXIT |
---------------------------------------------------------------------------------------------------
 ENTRY |      |  o   |      |      |      |      |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B1   |      |      |  o   |      |      |      |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B2   |      |      |      |  o   |  o   |      |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B3   |      |      |      |      |      |      |      |      |      |  o   |      |      |      |
---------------------------------------------------------------------------------------------------
  B4   |      |      |      |      |      |  o   |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B5   |      |      |      |      |      |      |  o   |  o   |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B6   |      |      |      |      |      |      |      |      |  o   |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B7   |      |      |      |      |      |  o   |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
  B8   |      |      |      |      |      |      |      |      |      |  o   |      |      |      |
---------------------------------------------------------------------------------------------------
  B9   |      |      |      |      |      |      |      |      |      |      |  o   |      |      |
---------------------------------------------------------------------------------------------------
  B10  |      |      |      |      |      |      |      |      |      |      |      |  o   |      |
---------------------------------------------------------------------------------------------------
  B11  |      |      |      |      |      |      |      |      |      |      |      |      |  o   |
---------------------------------------------------------------------------------------------------
 EXIT  |      |      |      |      |      |      |      |      |      |      |      |      |      |
---------------------------------------------------------------------------------------------------
--> Generate Assemble Code? (s/n): [1;32m[5m
               =======================================================
                       ---->       Correct Program       <----        
               =======================================================
[0m
| Hay un poquito de cÃ³digo en tu marihuana d:-]
