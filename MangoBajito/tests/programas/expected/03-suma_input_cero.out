| AcomÃ³date que te lo estan analizando d:-)
--> Print Symbol Table? (s/n): [1;36m[5m
               =======================================================
                             Symbol Table Representation              
               =======================================================
[0m
[1;35m[5m    Clave: 1: n[0m
    |---> SÃ­mbolo: n, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 2, Type: mango, Value: 0

[1;35m[5m    Clave: 2: suma[0m
    |---> SÃ­mbolo: suma, CategorÃ­a: (6)ID, DeclaraciÃ³n: (0)VARIABLE, Scope: 2, Type: mango, Value: 0

[1;35m[5m    Clave: 3: rescata[0m
    |---> SÃ­mbolo: rescata, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 4: se_prende[0m
    |---> SÃ­mbolo: se_prende, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 5: caramba_Ã±ero[0m
    |---> SÃ­mbolo: caramba_Ã±ero, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 6: un_coÃ±o[0m
    |---> SÃ­mbolo: un_coÃ±o, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 7: hablame[0m
    |---> SÃ­mbolo: hablame, CategorÃ­a: (1)FUNCTION, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 8: tas_claro[0m
    |---> SÃ­mbolo: tas_claro, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 9: negro[0m
    |---> SÃ­mbolo: negro, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 10: higuerote[0m
    |---> SÃ­mbolo: higuerote, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 11: manguangua[0m
    |---> SÃ­mbolo: manguangua, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 12: manguita[0m
    |---> SÃ­mbolo: manguita, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

[1;35m[5m    Clave: 13: mango[0m
    |---> SÃ­mbolo: mango, CategorÃ­a: (0)TYPE, DeclaraciÃ³n: (1)CONSTANT, Scope: 0

--> Print AST? (s/n): [1;36m[5m
               =======================================================
                                   AST Representation                 
               =======================================================
[0m
Programa
|--> Main
     |--> InstrucciÃ³n | Kind: ;
          |--> InstrucciÃ³n | Kind: ;
          |    |--> InstrucciÃ³n | Kind: ;
          |    |    |--> AsignaciÃ³n | Kind: =
          |    |    |    |--> suma | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |    |    |    |--> Literal | Category: NumÃ©rico | Type: mango | Value: 0
          |    |    |--> n | Category: DeclaraciÃ³n | Type: mango | Kind: VARIABLE
          |    |--> Bucle | Category: Indeterminado
          |         |--> echale_bolas_si
          |              |--> Guardia
          |              |    |--> Literal | Category: Bool | Type: tas_claro | Kind: Sisa | Value: 1
          |              |--> InstrucciÃ³n | Kind: ;
          |                   |--> InstrucciÃ³n | Kind: ;
          |                   |    |--> AsignaciÃ³n | Type: mango | Kind: = | Value: 0
          |                   |    |    |--> n | Category: Identificador | Type: mango | Value: 0
          |                   |    |    |--> Literal | Category: NumÃ©rico | Type: mango | Kind: CAST(higuerote) | Value: 0
          |                   |    |         |--> hablame | Category: input | Type: higuerote | Value: "0"
          |                   |    |              |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Value: "Ingrese numero: "
          |                   |    |--> CondiciÃ³n
          |                   |         |--> si_es_asi
          |                   |              |--> Guardia
          |                   |              |    |--> igualito | Category: OperaciÃ³n | Type: tas_claro | Kind: Booleana | Value: 1
          |                   |              |         |--> n | Category: Identificador | Type: mango | Value: 0
          |                   |              |         |--> Literal | Category: NumÃ©rico | Type: mango | Value: 0
          |                   |              |--> uy_kieto | Category: Control de Flujo
          |                   |--> Suma Compuesta | Category: OperaciÃ³n | Type: mango | Kind: += | Value: 0
          |                        |--> suma | Category: Identificador | Type: mango | Value: 0
          |                        |--> n | Category: Identificador | Type: mango | Value: 0
          |--> rescata | Category: Output | Type: higuerote | Value: "La suma es: 0"
               |--> + | Category: OperaciÃ³n | Type: higuerote | Kind: ConcatenaciÃ³n | Value: "La suma es: 0"
                    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Value: "La suma es: "
                    |--> Literal | Category: Cadena de Caracteres | Type: higuerote | Kind: CAST(mango) | Value: "0"
                         |--> suma | Category: Identificador | Type: mango | Value: 0
--> Print TAC? (s/n): [1;36m[5m
               =======================================================
                                   TAC Representation                 
               =======================================================
[0m
[1;36m[5m
.data:[0m
str0 := "Ingrese numero: "
str1 := "La suma es: "
[1;36m[5m
.declaration:[0m
[1;33m[5mScope 2:[0m
suma: alloc 4
n: alloc 4
[1;36m[5m
.code:[0m
suma := 0
L1: 
param &str0
t0 := call read, 1
n := (int)t0
ifnot n == 0 goto L0
goto L2
L0: 
suma := suma + n
goto L1
L2: 
param &str1
param (string)suma
call print, 2
--> Print Control Flow Graphs? (s/n): [1;36m[5m
               =======================================================
                                  Control Flow Graphs                 
               =======================================================
[0m
----------------------------------------------------------
[1;33m[5mName: ENTRY:[0m
Childs: B1 
In: int str0 str1 string suma t0 
Out: int str0 str1 string suma t0 
----------------------------------------------------------
[1;33m[5mName: B1:[0m
Lider Label: 
Code:
     | suma := 0
Childs: B2 
Fathers: ENTRY 
In: int str0 str1 string suma t0 
Out: int str0 str1 string suma t0 
----------------------------------------------------------
[1;33m[5mName: B2:[0m
Lider Label: L1
Code:
     | L1: 
     | param &str0
     | t0 := call read, 1
Childs: B3 
Fathers: B1 B5 
Use: str0 
In: int str0 str1 string suma t0 
Out: int str0 str1 string suma t0 
----------------------------------------------------------
[1;33m[5mName: B3:[0m
Lider Label: 
Code:
     | n := (int)t0
     | ifnot n == 0 goto L0
Childs: B5 B4 
Fathers: B2 
Def: n 
Use: int t0 
In: int str0 str1 string suma t0 
Out: int n str0 str1 string suma t0 
----------------------------------------------------------
[1;33m[5mName: B4:[0m
Lider Label: 
Code:
     | goto L2
Childs: B6 
Fathers: B3 
In: str1 string suma 
Out: str1 string suma 
----------------------------------------------------------
[1;33m[5mName: B5:[0m
Lider Label: L0
Code:
     | L0: 
     | suma := suma + n
     | goto L1
Childs: B2 
Fathers: B3 
Use: n 
In: int n str0 str1 string suma t0 
Out: int str0 str1 string suma t0 
----------------------------------------------------------
[1;33m[5mName: B6:[0m
Lider Label: L2
Code:
     | L2: 
     | param &str1
     | param (string)suma
     | call print, 2
Childs: EXIT 
Fathers: B4 
Use: str1 string suma 
In: str1 string suma 
----------------------------------------------------------
[1;33m[5mName: EXIT:[0m
Fathers: B6 
----------------------------------------------------------

                  * | Matriz de Adyacencia | *                  
   -   |ENTRY |  B1  |  B2  |  B3  |  B4  |  B5  |  B6  | EXIT |
----------------------------------------------------------------
 ENTRY |      |  o   |      |      |      |      |      |      |
----------------------------------------------------------------
  B1   |      |      |  o   |      |      |      |      |      |
----------------------------------------------------------------
  B2   |      |      |      |  o   |      |      |      |      |
----------------------------------------------------------------
  B3   |      |      |      |      |  o   |  o   |      |      |
----------------------------------------------------------------
  B4   |      |      |      |      |      |      |  o   |      |
----------------------------------------------------------------
  B5   |      |      |  o   |      |      |      |      |      |
----------------------------------------------------------------
  B6   |      |      |      |      |      |      |      |  o   |
----------------------------------------------------------------
 EXIT  |      |      |      |      |      |      |      |      |
----------------------------------------------------------------
--> Generate Assemble Code? (s/n): [1;32m[5m
               =======================================================
                       ---->       Correct Program       <----        
               =======================================================
[0m
| Hay un poquito de cÃ³digo en tu marihuana d:-]
