# Test 7: Caso de Prueba Nro.6
# IntÃ©rprete del lenguaje Brainf*ck ( https://esolangs.org/wiki/Brainfuck )

culito entrada: higuerote = "
+++++++++++[>++++++>+++++++++>++++++++>++++>+++>+<<<<<<-]>+++
+++.>++.+++++++..+++.>>.>-.<<-.<.+++.------.--------.>>>+.>-.
";

culito caracter_entrada: negro;

# seteamos la memoria 
culito tamano_memoria: mango = 30000;

culito memoria: mango[tamano_memoria]; 

# Seteamos el puntero de la memoria
culito puntero_memoria: mango = 0;

# Seteamos el pc
culito pc: mango = 0;

# Control de la profundidad, indica que tan anidado estan las repeticiones
culito profundidad: mango = 0;
culito nueva_pos: mango;

# Controla el caracter que puedes poner en una celda usando el comandp ","
culito nuevo_caracter: higuerote;

# Funcion para encontrar el ] correspondiente a un [
echar_cuento encontrar_correspondiente(entrada:higuerote, pc:mango) lanza mango {
    profundidad = 0;
    repite_burda i desde pc hasta me_mide(entrada) {
        si_es_asi(entrada[i] igualito "[") {
            profundidad += 1;
        } o_asi (entrada[i] igualito "]") {
            profundidad -= 1;
        };

        si_es_asi (profundidad igualito 0) {
            lanza i;
        };
    };
    lanza -1;
};

# Funcion para encontrar el [ correspondiente a un ]
echar_cuento encontrar_correspondiente_inverso(entrada:higuerote, pc:mango) lanza mango {
    profundidad = 0;
    repite_burda i desde pc hasta -1 con flow -1 {
        si_es_asi(entrada[i] igualito "[") {
            profundidad -= 1;
        } o_asi (entrada[i] igualito "]") {
            profundidad += 1;
        };

        si_es_asi (profundidad igualito 0) {
            lanza i;
        };
    };
    lanza -1;   
};

# Flujo principal
echale_bolas_si (pc menol me_mide(entrada)){
    caracter_entrada = entrada[pc];

    si_es_asi (caracter_entrada igualito ">"){
        si_es_asi (puntero_memoria + 1 peluche me_mide(memoria)){
            puntero_memoria += 1;
        };
    } o_asi (caracter_entrada igualito "<"){
        si_es_asi (puntero_memoria mayol 0){
            puntero_memoria -= 1;
        };
    } o_asi (caracter_entrada igualito "+"){
        memoria[puntero_memoria] += 1;
    } o_asi (caracter_entrada igualito "-"){
        memoria[puntero_memoria] -= 1;
    } o_asi (caracter_entrada igualito ","){
        nuevo_caracter = hablame();
        si_es_asi (me_mide(nuevo_caracter) igualito 0){
            memoria[puntero_memoria] = 0;
        } nojoda {
            memoria[puntero_memoria] = (mango)nuevo_caracter[0];
        };
    } o_asi (caracter_entrada igualito "["  yunta memoria[puntero_memoria] igualito 0){
        nueva_pos = encontrar_correspondiente(entrada, pc);

        si_es_asi (nueva_pos nie -1){
            pc = nueva_pos;
        };
    } o_asi (caracter_entrada igualito "]" yunta memoria[puntero_memoria] nie 0){
        nueva_pos = encontrar_correspondiente_inverso(entrada, pc);

        si_es_asi (nueva_pos nie -1){
            pc = nueva_pos;
        };
    };
    } o_asi (caracter_entrada igualito "."){
        rescata((negro)memoria[puntero_memoria]);
    };
    pc += 1;
};

se_prende(){
	# inicializaciones
}